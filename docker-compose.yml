version: '3'
services:

  #PHP Service
  app1:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    image: digitalocean.com/php
    container_name: app1
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app1
      SERVICE_TAGS: dev1
    working_dir: /var/www
    volumes:
      - ./app/:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    command: php public/script1.php
  app2:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    image: digitalocean.com/php
    container_name: app2
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app2
      SERVICE_TAGS: dev2
    working_dir: /var/www
    volumes:
      - ./app/:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    command: php public/script2.php

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./app/:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/dbdata:/var/lib/mysql
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: your_mysql_root_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local